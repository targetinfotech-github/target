# Generated by Django 5.0.6 on 2024-07-15 11:39

import apps.billing.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('sh_name', models.CharField(blank=True, max_length=30, null=True)),
                ('print_name', models.CharField(blank=True, max_length=30, null=True)),
                ('address', models.TextField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('city', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('gstin', models.CharField(max_length=15, validators=[apps.billing.models.validate_gstin])),
                ('company_type', models.CharField(choices=[('proprietorship', 'Proprietorship'), ('partnership', 'Partnership'), ('pvt_ltd', 'Pvt Ltd'), ('public_ltd', 'Public Ltd'), ('institution', 'Institution')], default='proprietorship', max_length=30)),
                ('business_type', models.CharField(choices=[('manufacturing', 'Manufacturing'), ('trading', 'Trading'), ('manufacturing_and_trading', 'Manufacturing & Trading'), ('others', 'Others')], default='manufacturing', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('print_name', models.CharField(blank=True, max_length=30, null=True)),
                ('sh_name', models.CharField(blank=True, max_length=30, null=True)),
                ('contact', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('last_accessed', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'Customer',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('print_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sh_name', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(choices=[('manufacturer', 'Manufacturer'), ('supplier', 'Supplier')], default='manufacturer', max_length=20, verbose_name='Type')),
                ('address', models.TextField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('gstin', models.CharField(blank=True, max_length=15, null=True, validators=[apps.billing.models.validate_gstin])),
                ('hsn', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact', models.CharField(blank=True, max_length=20, null=True)),
                ('last_accessed', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('id_no', models.CharField(blank=True, choices=[('cash_paid_to', 'Cash Paid To'), ('cash_received_from', 'Cash Received From'), ('salary_for_the_month', 'Salary For The Month'), ('sale_of_floppy_disks', 'Sale of Floppy Disks'), ('sale_of_keyboards', 'Sale of Keyboards'), ('tour_bills_paid_to', 'Tour Bills Paid To'), ('transfer_from_bank', 'Transfer From Bank')], max_length=30, null=True)),
                ('purchase_type', models.CharField(blank=True, choices=[('within_state', 'Within State'), ('outside_state', 'Outside State'), ('sale_in_transit', 'Sale in Transit'), ('import', 'Import')], max_length=30, null=True)),
                ('tin', models.CharField(max_length=15)),
                ('gtax_type', models.CharField(blank=True, choices=[('gst_registered', 'GST Registered'), ('composite_dealer', 'Composite Dealer'), ('unregistered_dealer', 'Unregistered Dealer')], default='gst_registered', max_length=30, null=True)),
            ],
            options={
                'db_table': 'Manufacturer',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('group_name', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('print_name', models.CharField(blank=True, max_length=30, null=True)),
                ('sh_name', models.CharField(blank=True, max_length=30, null=True)),
                ('code_name', models.CharField(blank=True, max_length=30, null=True)),
                ('consolidation_code', models.CharField(blank=True, max_length=30, null=True)),
                ('hsn_code', models.CharField(blank=True, max_length=30, null=True)),
                ('gcr_code', models.CharField(blank=True, max_length=30, null=True)),
                ('last_accessed', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'ProductGroup',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'CustomUser',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_year_from', models.DateField(default=apps.billing.models.default_account_year_from, verbose_name='Account Year From')),
                ('account_year_upto', models.DateField(default=apps.billing.models.default_account_year_upto, verbose_name='Account Year Upto')),
                ('books_from', models.DateField(default=apps.billing.models.default_account_year_from, verbose_name='Books From')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='billing.companyprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('product_code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('print_name', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, max_length=20, null=True)),
                ('buy_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('sell_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('mrp', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('net_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('stock_option', models.CharField(choices=[('quantity_wise', 'Quantity Wise'), ('batch_wise', 'Batch Wise')], default='quantity_wise', max_length=20)),
                ('last_accessed', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_manufacturer', to='billing.manufacturer')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_group', to='billing.productgroup')),
            ],
            options={
                'db_table': 'Product',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_type', models.CharField(choices=[('purchases', 'Purchases'), ('adjustments', 'Adjustments'), ('opening_stock', 'Opening Stock')], default='purchases', max_length=20)),
                ('receipt_status', models.CharField(choices=[('purchases', [('received', 'Received'), ('transit', 'Transit'), ('approved', 'Approved'), ('suspense', 'Suspense')]), ('adjustments', [('adjustment', 'Adjustment'), ('transfer', 'Transfer'), ('suspense', 'Suspense')]), ('opening_stock', [('none', 'None')])], default='received', max_length=20)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('net_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receipt_manufacturers', to='billing.manufacturer')),
            ],
            options={
                'db_table': 'Receipt',
            },
        ),
        migrations.CreateModel(
            name='ReceiptProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('discount', models.FloatField()),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='receipt_products', to='billing.product')),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipt_models', to='billing.receipt')),
            ],
            options={
                'db_table': 'ReceiptProduct',
            },
        ),
    ]
